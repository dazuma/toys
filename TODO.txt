# TODO items

This is a dumping ground of possible ideas and future directions for Toys.
These items are all tentative or under investigation. Finalized to-do items
are covered in github issues (https://github.com/dazuma/toys/issues).

## Definitely todo

* Add Ruby 3.4 to CI
* Provide a way to make the git cache deletable so cleanup tasks don't fail
* gem mixin should allow flags like on_missing: :install on the gem method (not just on the include)
* Support gem-based tool installs. Maybe load_gem directive that works similar to load_git. We may need to ensure that any gems so loaded get included in any subsequent bundles.
* Handlers should let you build state more flexibly, in particular giving you access to other fields as context. So you can say `--start-context=FOO --add-to-context=1 --add-to-context=2 --start-context=BAR --add-to-context=3` and be able to distinguish which contexts to add to.
* Toys rubocop should support passing -a, -A, etc.

## Ideas under investigation

* Allow override when doing data lookup (for subdirectory-specific configuration)
* Evaluate options for closer Rails integration
* Should it be possible to set require_exact_flag_match per-flag?
* toys system new: Create toys files and gems
* toys system lint: Check toys file structure and practices
* Line length limit for Terminal (there's a gem for unicode line length)
* Generalized classes for generating output formats
* Namespace clearing/locking
* Additional ways to find terminal size

## Other ideas we probably won't do

* toys system clean: Clean old installations of toys. Probably not a good idea because other versions may be in bundles.
* Customize the value to set when not providing a value to an optional-value flag. Probably not worth it since normal boolean flags are always set to `true`, and the handler can be used to customize it already.
* Tool archives: We implemented tool loading over git which is probably better.
